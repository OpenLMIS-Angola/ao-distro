version: "3.3"

services:
  service-configuration:
    build:
      context: ./config
    volumes:
      - config-volume:/config
      - certbot-endpoint:/var/www/certbot
      - letsencrypt-config:/etc/letsencrypt
    environment:
      RENEWAL_CHECK_PERIOD: "$RENEWAL_CHECK_PERIOD"
    entrypoint: >
      sh -c ". /config/certs_obtaining.sh"

  scalyr:
    image: openlmis/scalyr
    env_file: settings.env
    volumes:
      - config-volume:/config
      - ${SCALYR_DOCKER_SOCK}:/var/scalyr/docker.sock
      - syslog:/var/log/reporting

  log:
    image: openlmis/rsyslog:${OL_RSYSLOG_VERSION}
    volumes:
      - syslog:/var/log
    ports:
      - "${SYSLOG_UDP_PORT}:514/udp"

  nginx-tls:
    image: openlmisao/nginx-tls:${ANGOLA_NGINX_TLS_VERSION}
    container_name: nginx-tls
    ports:
      - "${NIFI_WEB_HTTP_PORT}:80"
      - "${NIFI_WEB_HTTPS_PORT}:443"
      - "${SUPERSET_WEB_HTTPS_PORT}:8088"
    env_file: settings.env
    environment:
      NGINX_LOG_DIR: '/var/log/nginx/log'
      RENEWAL_CHECK_PERIOD: "$RENEWAL_CHECK_PERIOD"
    volumes:
      - 'config-volume:/config'
      - 'certbot-endpoint:/var/www/certbot'
      - 'letsencrypt-config:/etc/letsencrypt'
    command: >
      sh -c "cp -f /config/nginx-tls/nginx.tmpl /etc/nginx/nginx.tmpl
      && . /etc/nginx/run_with_template.sh -d
      && . /etc/nginx/certs_reloading.sh"
    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "udp://127.0.0.1:${SYSLOG_UDP_PORT}"
    depends_on: [nginx-nifi, superset]

  nginx-nifi:
    image: openlmisao/nginx-tls:${ANGOLA_NGINX_TLS_VERSION}
    ports:
      - "80"
    env_file: settings.env
    environment:
      NGINX_LOG_DIR: '/var/log/nginx/log'
    volumes:
      - config-volume:/config
    command: >
      sh -c "cp -f /config/nginx-nifi/nginx.tmpl /etc/nginx/nginx.tmpl
      && . /config/nginx-nifi/set-authorization.sh
      && . /etc/nginx/run_with_template.sh"
    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "udp://127.0.0.1:${SYSLOG_UDP_PORT}"
    depends_on: [nifi, log, service-configuration]

  nifi:
    image: apache/nifi:${OL_NIFI_VERSION}
    ports:
      - "8080"
    volumes:
      - config-volume:/config
      - ./nifi-cache:/tmp/nifi-docker-cache
    entrypoint: >
      bash -c "/config/nifi/scripts/start.sh ${OL_NIFI_VERSION}"
    environment:
      - NIFI_JVM_HEAP_INIT=${NIFI_JVM_HEAP_INIT}
      - NIFI_JVM_HEAP_MAX=${NIFI_JVM_HEAP_MAX}
    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "udp://127.0.0.1:${SYSLOG_UDP_PORT}"
    depends_on: [log, service-configuration]
    env_file: settings.env

  db-service-configuration:
    build:
      context: ./db
    volumes:
      - db-config-volume:/docker-entrypoint-initdb.d

  db:
    image: openlmis/postgres:${OL_POSTGRES_VERSION}
    env_file: settings.env
    volumes:
        - db-config-volume:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "udp://127.0.0.1:${SYSLOG_UDP_PORT}"
    depends_on: [log, db-service-configuration]
    env_file: settings.env

  superset:
    build:
      context: ./superset
      args:
        SUPERSET_VERSION: ${OL_SUPERSET_VERSION}
        SUPERSET_PATCHUP_VERSION: ${OL_SUPERSET_PATCHUP_VERSION}
    ports:
      - "8088"
    volumes:
      - config-volume:/config
    command: >
        bash -c "cp -r /config/superset /etc/
        && sh /etc/superset/init.sh"
    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "udp://127.0.0.1:${SYSLOG_UDP_PORT}"
    depends_on: [log, db, service-configuration, nginx-nifi]
    env_file: settings.env

volumes:
  syslog:
    external: false
  config-volume:
    external: false
  db-config-volume:
    external: false
  certbot-endpoint:
    external: false
  letsencrypt-config:
    external: true
